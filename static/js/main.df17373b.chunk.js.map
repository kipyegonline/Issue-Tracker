{"version":3,"sources":["queries.js","Issue.js","IssueList.js","Repository.js","RepositoryList.js","SearchBar.js","Client.js","Home.js","Login.js","App.js","index.js"],"names":["SEARCH_FOR_REPOS","gql","GET_REPO_ISSUES","useStyles","makeStyles","title","marginTop","marginBottom","textAlign","backgroundColor","Issue","bodyHTML","classes","useState","dialogOpened","setDialogOpened","Container","ListItem","button","onClick","className","ListItemText","Dialog","maxWidth","open","onClose","DialogContent","dangerouslySetInnerHTML","__html","root","flexDirection","spinnerContainer","display","justifyContent","issues","issues1","hr","color","IssueList","repoName","repoOwner","useQuery","variables","name","owner","data","loading","error","CircularProgress","Typography","variant","component","repository","nodes","length","List","map","issue","summaryContainer","summaryHeader","issues2","chip","marginLeft","chip1","width","Repository","repo","expanded","onToggled","node","descriptionHTML","login","totalStarCount","stargazers","totalCount","ExpansionPanel","onChange","ExpansionPanelSummary","content","Chip","label","avatar","ExpansionPanelDetails","note","RepositoryList","searchTerm","expandedRepo","setExpandedRepo","useDebounce","debouncedSearchTerm","search_term","useEffect","search","repositoryCount","edges","i","input","SearchBar","value","TextField","type","placeholder","InputProps","endAdornment","InputAdornment","position","data-testid","e","target","client","ApolloClient","uri","headers","Authorization","process","body","marginRight","Home","setSearchTerm","main","src","style","height","borderRadius","alt","Login","clientId","onSuccess","response","console","log","code","buttonText","valid","redirectUri","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df17373b.chunk.js","sourcesContent":["import gql from 'graphql-tag';\r\n\r\nexport const SEARCH_FOR_REPOS = gql`\r\n    query($search_term: String!) {\r\n        search(query: $search_term, type: REPOSITORY, first: 20) {\r\n            repositoryCount,\r\n            edges {\r\n                node {\r\n                    ... on Repository {\r\n                        name,\r\n                        owner {\r\n                          login  \r\n                        },\r\n                        stargazers {\r\n                            totalCount\r\n                        },\r\n                        descriptionHTML,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_REPO_ISSUES = gql`\r\n    query($name: String!, $owner: String!) {\r\n        repository(name: $name, owner: $owner) {\r\n            issues(first: 20, states: [OPEN], orderBy: {field: CREATED_AT, direction: DESC}) {\r\n                nodes {\r\n                    title,\r\n                    bodyHTML,\r\n                    createdAt\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;","import React, {useState} from 'react';\r\nimport {Dialog, DialogContent, ListItem, ListItemText,Typography, Container, makeStyles} from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    marginTop: '1rem',\r\n    marginBottom: '1rem',\r\n    textAlign: 'center',\r\n    backgroundColor: 'white'\r\n  }\r\n});\r\n\r\nconst Issue = ({title, bodyHTML}) => {\r\n  const classes = useStyles();\r\n  const [dialogOpened, setDialogOpened] = useState(false);\r\n  return (\r\n    <>\r\n     <Container >\r\n      <ListItem button onClick={() => setDialogOpened(true)} className={classes.title}>\r\n        <ListItemText >{title}</ListItemText>\r\n      </ListItem>\r\n      {/* <ListItem className={classes.title}>\r\n        <ListItemText >{}</ListItemText>\r\n      </ListItem> */}\r\n      <Dialog maxWidth={'xl'} open={dialogOpened} onClose={() => setDialogOpened(false)}>\r\n        <DialogContent>\r\n          <div dangerouslySetInnerHTML={{__html: bodyHTML}}/>\r\n        </DialogContent>\r\n      \r\n      </Dialog>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Issue;\r\n","import {useQuery} from '@apollo/react-hooks';\r\nimport {CircularProgress, List, Typography, makeStyles} from '@material-ui/core';\r\nimport React from 'react';\r\nimport Issue from \"./Issue\";\r\nimport {GET_REPO_ISSUES} from './queries';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexDirection: 'column'\r\n  },\r\n  spinnerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around'\r\n  },\r\n  issues:{\r\n    backgroundColor: 'white'\r\n },\r\n issues1:{\r\n  backgroundColor: '#d3d3d3'\r\n},\r\nhr:{\r\ncolor: 'white'\r\n}\r\n});\r\n\r\nconst IssueList = ({repoName, repoOwner}) => {\r\n  const classes = useStyles();\r\n  const {data, loading, error} = useQuery(GET_REPO_ISSUES,\r\n    {variables: {\r\n        name: repoName,\r\n        owner: repoOwner\r\n      }});\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.spinnerContainer}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Typography\r\n        variant={'overline'}\r\n        component={'div'}\r\n        color={'error'}\r\n      >\r\n        {error}\r\n      </Typography>\r\n    )\r\n  }\r\n\r\n  if (!data.repository.issues.nodes.length) {\r\n    return (\r\n      <Typography\r\n        variant={'overline'}\r\n        component={'div'}\r\n      >\r\n        There are no issues!\r\n      </Typography>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant={'h5'}>Latest issues: </Typography>\r\n      {/* <select >\r\n        <option value=\"Bug\">Bug</option>\r\n        <option value=\"dependency\">dependency</option>\r\n      </select> */}\r\n      <List className={classes.issues1}>\r\n        {data.repository.issues.nodes.map(issue => (\r\n          <Issue className={classes.issues1} title={issue.title}       bodyHTML={issue.bodyHTML} />\r\n\r\n        ))}<br/>\r\n\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssueList;","import React from 'react';\r\nimport IssueList from './IssueList';\r\nimport {\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  Typography,\r\n\r\n  Chip,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      marginTop: '1rem',\r\n      backgroundColor: '#d3d3d3'\r\n    },\r\n    summaryContainer: {\r\n      flexDirection: 'column'\r\n      \r\n    },\r\n    summaryHeader: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      marginBottom: '1rem',\r\n      \r\n    },\r\n    issues1:{\r\n       backgroundColor:'white'\r\n    },\r\n    issues2:{\r\n      backgroundColor: '#d3d3d3'\r\n   },\r\n    chip: {\r\n      marginLeft: '0.5rem'\r\n    },\r\n    chip1: {\r\n      marginLeft: '0.5rem',\r\n      width:'100px'\r\n    }\r\n  });\r\n  \r\n  const Repository = ({repo, expanded, onToggled}) => {\r\n    const {node: {name, descriptionHTML, owner: {login}, stargazers: {totalCount: totalStarCount}}} = repo;\r\n    const classes = useStyles();\r\n    return (\r\n      <ExpansionPanel\r\n        expanded={expanded}\r\n        onChange={onToggled}\r\n        className={classes.root}\r\n      >\r\n        <ExpansionPanelSummary classes={{content: classes.summaryContainer}}>\r\n          <div className={classes.summaryHeader}>\r\n            <Typography variant={'h6'}>{name}</Typography>\r\n            {/* <Typography variant={'h4'}>{url}</Typography> */}\r\n            <div>\r\n              <Chip label={`by ${login}`} avatar={<PeopleIcon/>} className={classes.chip}/>\r\n              <Chip label={totalStarCount} avatar={<StarIcon/>} className={classes.chip}/>\r\n               \r\n            </div>\r\n          </div>\r\n          <Typography\r\n            variant={'caption'}\r\n            dangerouslySetInnerHTML={{__html: descriptionHTML}}\r\n            component={'div'}\r\n          />\r\n           <Chip label=\"ISSUES\"  className={classes.chip1}/>\r\n        </ExpansionPanelSummary>\r\n       \r\n        <ExpansionPanelDetails className={classes.issues1}>\r\n        \r\n          {expanded && (<IssueList className={classes.issues2} repoName={name} repoOwner={login}/>)}\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  };\r\n  \r\n  export default Repository;","import React, {useState, useEffect} from 'react';\r\nimport {useQuery} from \"@apollo/react-hooks\";\r\nimport {Typography, makeStyles, CircularProgress} from \"@material-ui/core\";\r\nimport {useDebounce} from \"use-debounce\";\r\nimport {SEARCH_FOR_REPOS} from \"./queries\";\r\nimport Repository from \"./Repository\";\r\n\r\nconst useStyles = makeStyles({\r\n  note: {\r\n    marginTop: '1rem',\r\n    textAlign: 'center',\r\n  },\r\n  spinnerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    marginTop: '1rem'\r\n  },\r\n});\r\n\r\nconst RepositoryList = ({searchTerm}) => {\r\n  const classes = useStyles();\r\n  const [expandedRepo, setExpandedRepo] = useState(null);\r\n  const [debouncedSearchTerm] = useDebounce(searchTerm, 1000);\r\n  const {data, loading, error} = useQuery(SEARCH_FOR_REPOS,\r\n    {variables: {search_term: debouncedSearchTerm}}\r\n    );\r\n\r\n  useEffect(() => {\r\n    setExpandedRepo(null);\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.spinnerContainer}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Typography\r\n        variant={'overline'}\r\n        className={classes.note}\r\n        component={'div'}\r\n        color={'error'}\r\n      >\r\n        {error}\r\n      </Typography>\r\n    )\r\n  }\r\n\r\n  if (!data.search.repositoryCount) {\r\n    return (\r\n      <Typography\r\n        variant={'overline'}\r\n        className={classes.note}\r\n        component={'div'}\r\n      >\r\n       Search for github repositories!\r\n      </Typography>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data.search.edges.map((repo, i) => (\r\n        <Repository\r\n          repo={repo}\r\n          expanded={expandedRepo === i}\r\n          onToggled={() => setExpandedRepo(i)}\r\n          key={i}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepositoryList;","import React from 'react';\r\nimport {TextField, InputAdornment, makeStyles} from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles({\r\n  input: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nconst SearchBar = ({value, onChange}) => {\r\n  const classes = useStyles();\r\n// const simulateChangeOnInput = (wraper, inputSelector) \r\n  return (\r\n    <TextField\r\n      className={classes.input}\r\n      label='Search for repos...'\r\n      type='search'\r\n      placeholder='search'\r\n      name='search'\r\n      variant='outlined'\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position='end' data-testid=\"search-button\">\r\n            <SearchIcon />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      value={value}\r\n      onChange={e =>onChange (e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBar;","import ApolloClient from 'apollo-boost';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://api.github.com/graphql',\r\n  headers: {\r\n    Authorization: `bearer ${process.env.REACT_APP_GITHUB_KEY}`\r\n  }\r\n});\r\n\r\nexport default client;","import React, {useState} from 'react';\r\nimport {Typography, Container, makeStyles} from \"@material-ui/core\";\r\nimport RepositoryList from \"./RepositoryList\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport client from './Client';\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    marginTop: '1rem',\r\n    marginBottom: '1rem',\r\n    textAlign: 'center',\r\n    backgroundColor: 'grey'\r\n  },\r\n  body: {\r\n\r\n    width:\"50%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n\r\n \r\n  },\r\n\r\n});\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  return (\r\n    <Container maxWidth={'xl'}  className={classes.main} >\r\n    <ApolloProvider client={client}>\r\n      <div className={classes.body}>\r\n    <Container maxWidth={'sm'}>\r\n      <Typography variant={'h3'} className={classes.title}>  Issue Tracker <br></br>\r\n     <img\r\n                        src={process.env.PUBLIC_URL + \"/images/github.png\"} \r\n                          style={{width:'100px',height:'100px',borderRadius:'35%'}}\r\n                          alt=\"Issue Tracker\" \r\n                          className=\"Issue Tracker\"\r\n                     \r\n                          /> </Typography>\r\n      <SearchBar value={searchTerm} onChange={setSearchTerm}/>\r\n      <RepositoryList searchTerm={searchTerm}/>\r\n    </Container>\r\n    </div>\r\n  </ApolloProvider> </Container> \r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Typography, Container, makeStyles} from \"@material-ui/core\";\r\n\r\nimport ReactLoginMS from \"react-ms-login\";\r\n\r\nimport GitHubLogin from 'react-github-login';\r\nimport \"./App.css\"\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    marginTop: '1rem',\r\n    marginBottom: '1rem',\r\n    textAlign: 'center',\r\n  },\r\n  body: {\r\n    width:\"50%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    textAlign: 'center',\r\n    // border: \"solid #73AD21\",\r\n    marginTop: \"70px\",\r\n    marginBottom: \"70px\",\r\n    backgroundColor: '#d3d3d3'\r\n\r\n  }\r\n\r\n});\r\n\r\nconst Login = () => {\r\n\r\n  const onSuccessGithub = (response) => {\r\n    console.log(response.code);\r\n  } \r\n  const uri='http://mercykip.github.io/Issue-Tracker/#/search';\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"App\" >\r\n      <form className={classes.body}>\r\n        <h1>Issue Tracker Login </h1>\r\n        <br></br>\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/images/github.png\"} \r\n            style={{width:'100px',height:'100px',borderRadius:'35%'}}\r\n            alt=\"Issue Tracker\" \r\n            className=\"Issue Tracker\"\r\n        \r\n            /> \r\n      <br></br>\r\n      <br></br>\r\n          {/*CLIENTID REDIRECTURI NOT CREATED YET*/}\r\n\r\n          <GitHubLogin \r\n           clientId=\"3d4f3c95e01bb93e6906\"\r\n            onSuccess={onSuccessGithub}\r\n            buttonText=\"LOGIN WITH GITHUB\"\r\n            className=\"btn\"\r\n            valid={true}\r\n            redirectUri={uri}\r\n            // className={classes.btn}\r\n          />\r\n          <br />\r\n          <br />\r\n          {/* CLIENTID REDIRECTURI NOT CREATED YET\r\n\r\n          <ReactLoginMS \r\n             clientId=\"_\"\r\n             redirectUri=\"_\" \r\n             cssClass=\"ms-login\" \r\n             btnContent=\"LOGIN WITH MICROSOFT\"\r\n             responseType=\"token\"\r\n             handleLogin={(data) => console.log(data)}\r\n          /> */}\r\n           <br />\r\n          <br />\r\n      </form>\r\n\r\n   </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\nimport { HashRouter, Route, Switch , BrowserRouter } from \"react-router-dom\";\nimport Home from './Home';\nimport Login from './Login';\n\n\nconst App = () => {\n\n  return (\n    <div className=\"wrapper\">\n  <HashRouter>\n        <Switch>\n        <Route path=\"/search\">\n            <Home />\n          </Route>\n          <Route path=\"/\">\n            <Login />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n   \n\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}